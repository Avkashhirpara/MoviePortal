package com.movie.portal.booking;

import java.sql.PreparedStatement;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.jdbc.core.simple.SimpleJdbcInsert;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;
import org.springframework.stereotype.Repository;

import com.movie.portal.entity.Booking;
import com.movie.portal.entity.mapper.ShowSearchMapper;
import com.movie.portal.show.ShowSearchDTO;

@Repository
public class BookingRepository {

	@Autowired
	JdbcTemplate jdbcTemplate;

	@Autowired
	NamedParameterJdbcTemplate namedParameterJdbcTemplate;

	@Autowired
	DataSource dataSource;

	public long insertBooking(Booking booking) {
		KeyHolder keyHolder = new GeneratedKeyHolder();

		jdbcTemplate.update(connection -> {
			PreparedStatement ps = connection.prepareStatement(
					"insert into booking(uid, show_id, total_seat,total_amount, discount_id, total_discount,"
							+ " payment_status, status) values(?,?,?,?,?,?,?,?)");
			ps.setLong(1, booking.getUid());
			ps.setLong(2, booking.getShowid());
			ps.setLong(3, booking.getTotalSeat());
			ps.setDouble(4, booking.getTotalAmount());
			ps.setLong(5, booking.getDiscountId());
			ps.setDouble(4, booking.getTotalDiscount());
			ps.setLong(6, booking.getPaymentStatus());
			ps.setLong(6, booking.getStatus());

			return ps;
		}, keyHolder);

		return (long) keyHolder.getKey();
	}

	public long insertBooking2(Booking booking) {

		SimpleJdbcInsert simpleJdbcInsert = new SimpleJdbcInsert(dataSource).withTableName("booking")
				.usingGeneratedKeyColumns("id");

		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("uid", booking.getUid());
		parameters.put("show_id", booking.getShowid());
		parameters.put("total_seat", booking.getTotalSeat());
		parameters.put("total_amount", booking.getTotalAmount());
		parameters.put("discount_id", booking.getDiscountId());
		parameters.put("total_discount", booking.getTotalDiscount());
		parameters.put("payment_status", booking.getPaymentStatus());
		parameters.put("status", booking.getStatus());

		Number id = simpleJdbcInsert.executeAndReturnKey(parameters);

		return (long) id;
	}

	public long updateBooking(Booking booking) {
		
		SqlParameterSource namedParameters = new MapSqlParameterSource()
		.addValue("uid", booking.getUid())
		.addValue("show_id", booking.getShowid())
		.addValue("total_seat", booking.getTotalSeat())
		.addValue("total_amount", booking.getTotalAmount())
		.addValue("discount_id", booking.getDiscountId())
		.addValue("total_discount", booking.getTotalDiscount())
		.addValue("payment_status", booking.getPaymentStatus())
		.addValue("status", booking.getStatus()).addValue("id", booking.getId());
		
		String sql = "update booking set uid = :uid, show_id = :show_id, total_seat= :total_seat,"
				+ " total_amount = :total_amount, discount_id = :discount_id, total_discount = :total_discount,"
				+ " payment_status= :payment_status, status = :status where id = :id";
		
	
			int id  = namedParameterJdbcTemplate.update(sql,namedParameters);
		
		return 0l;
	}

public long updateBookin1g(Booking booking) {
    KeyHolder keyHolder = new GeneratedKeyHolder();

    jdbcTemplate.update(connection -> {
        PreparedStatement ps = connection.prepareStatement(
        		"insert into booking(uid, show_id, total_seat,"
        		+ " total_amount, discount_id, total_discount,"
        		+ " payment_status, status) values(?,?,?,?)");
        
        return ps;
    }, keyHolder);

    return (long) keyHolder.getKey();

}

}
