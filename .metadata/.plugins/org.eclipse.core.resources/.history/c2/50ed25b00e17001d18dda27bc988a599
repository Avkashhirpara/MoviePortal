package com.movie.portal.show;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.stereotype.Repository;

import com.movie.portal.entity.MovieSearchDTO;
import com.movie.portal.entity.Show;
import com.movie.portal.entity.mapper.MovieSearchMapper;
import com.movie.portal.entity.mapper.ShowMapper;

@Repository
public class ShowRepository {
	
	@Autowired
	JdbcTemplate jdbcTemplate;
	
	@Autowired
	NamedParameterJdbcTemplate namedParameterJdbcTemplate;

	public List<Show> getAllShow() {
		
		
		String sql = "SELECT * FROM movieportal.show";
		List<Show> shows = null;
		try {
			shows = jdbcTemplate.query(sql, new ShowMapper());
		} catch (DataAccessException e) {
			e.printStackTrace();
		}
		return shows;
	}
	
	
	public List<MovieSearchDTO> getAllShowByMovieName(String movieName) {
		
		SqlParameterSource namedParameters = new MapSqlParameterSource().addValue("name", movieName);

		String sql = "	SELECT "
				+ "	 s.name,"
				+ "	 s.description,"
				+ "	 s.language,"
				+ "	 s.technology,"
				+ "	 s.start_time,"
				+ "	 p.name theater, "
				+ "	 screen.screen_location screenlocation,"
				+ "	 s.booked_seats,"
				+ "	 p.location, "
				+ "	 p.city,"
				+ "	 s.id showId,"
				+ "	 screen.id screenId,"
				+ "	 p.id PartnerId"
				+ "	FROM movieportal.show s inner join screen on s.screen_id = screen.id inner join partner p on p.id = screen.pid"
				+ "	where name like '%:name%'";
		List<MovieSearchDTO> shows = null;
		try {
			shows = namedParameterJdbcTemplate.query(sql,namedParameters, new MovieSearchMapper());
		} catch (DataAccessException e) {
			e.printStackTrace();
		}
		return shows;
	}
	
	

}
